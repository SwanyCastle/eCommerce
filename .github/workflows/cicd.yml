name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # main 브랜치에 push될 때 실행

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # 1. Repository 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. Java와 Gradle 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      # 3. Build Spring Boot Application
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 4. Docker Build
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-boot-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/spring-boot-app:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      # 1. EC2 서버에 SSH 접속 및 배포
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            docker-compose down
            docker-compose pull
            docker-compose up -d --build
